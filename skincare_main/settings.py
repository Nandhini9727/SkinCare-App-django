"""
Django settings for skincare_main project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-uemzwzn2t&__22+5rzo@2^w8vmtnmg#qnjmikl9v@l$chj)y^g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['django-skincareAppenv-env.eba-qp7tfns3.us-west-2.elasticbeanstalk.com','localhost','127.0.0.1','172.31.25.145']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'category', # adding the category app to settings.py
    'accounts', # adding the accounts app to settings.py
    'store', # adding the store app to settings.py
    'carts', # adding the carts app to settings.py
    'orders',# adding the orders app to settings.py
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'skincare_main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'], # adding templates directory after creating the templates folder in root directory
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'category.context_processors.menu_links', # configure category.context_processors.menu_links so that we can use links in any template that is required
                'carts.context_processors.counter', # condigure carts.context_processors.counter so that we can use cart_counter in any template that is required
            ],
        },
    },
]

WSGI_APPLICATION = 'skincare_main.wsgi.application'

AUTH_USER_MODEL = 'accounts.Account' # to let Django know that custom user model is being used
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR/'static' # STATIC_ROOT is defined for django to find the static folder directory and used for deployment purpose.BASE_DIR refers to the project level directory.
STATICFILES_DIRS = [ 
    'skincare_main/static', 
] # This directory is the list of folders Django will search for addtional static files when we run the server

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# media file configuration

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR/'media' # STATIC_ROOT is defined for django to find the media folder directory and used for deployment purpose.BASE_DIR refers to the project level directory.

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: "danger",
}

# SMTP Configuration

EMAIL_HOST = 'smtp.gmail.com'

EMAIL_POST = 587

EMAIL_HOST_USER = 'nandhu.sara97@gmail.com'

EMAIL_HOST_PASSWORD = 'kuoaetynqlxgrzlm'

EMAIL_USE_TLS = True

